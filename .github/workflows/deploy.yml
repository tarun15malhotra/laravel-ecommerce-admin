name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Install Dependencies
      run: |
        composer install --optimize-autoloader --no-dev
        npm ci
        npm run build
    
    - name: Generate optimized files
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
    
    - name: Deploy to Staging Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          cd /var/www/staging-ecommerce-admin
          git pull origin develop
          composer install --optimize-autoloader --no-dev
          npm ci
          npm run build
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan queue:restart
          sudo supervisorctl restart all
    
    - name: Run Health Check
      run: |
        sleep 10
        curl -f ${{ secrets.STAGING_URL }}/health || exit 1

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-staging]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Install Dependencies
      run: |
        composer install --optimize-autoloader --no-dev
        npm ci
        npm run build
    
    - name: Generate optimized files
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
    
    - name: Create deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *
    
    - name: Store artifact for distribution
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
    
    - name: Deploy to Production Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /var/www/ecommerce-admin
          php artisan down --message="Upgrading Database" --retry=60
          git pull origin main
          composer install --optimize-autoloader --no-dev
          npm ci
          npm run build
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan queue:restart
          php artisan up
          sudo supervisorctl restart all
    
    - name: Run Production Health Check
      run: |
        sleep 10
        curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1
    
    - name: Notify Deployment Success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Production deployment successful! :rocket:'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
    
    - name: Notify Deployment Failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'Production deployment failed! :x:'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  rollback:
    if: failure()
    runs-on: ubuntu-latest
    needs: deploy-production
    
    steps:
    - name: Rollback Production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /var/www/ecommerce-admin
          git reset --hard HEAD~1
          composer install --optimize-autoloader --no-dev
          php artisan migrate:rollback --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan queue:restart
          sudo supervisorctl restart all
